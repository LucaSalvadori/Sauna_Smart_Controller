esphome:
  name: display
  friendly_name: display

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "QKaCkUpUQkIGWSGZ0tMw7adj0U8hYLHHQl3mLWArMSk="

ota:
  password: "e86762051035f2b3fd78a542d9571bb2"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Display Fallback Hotspot"
    password: "rA5wEeiV11QO"

captive_portal:
    

# Example configuration entry

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: false

time:
  - platform: homeassistant
    id: esptime

sensor:
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.jv2299050981_temperature
    internal: true

  - platform: homeassistant
    id: outside_temperature
    entity_id: sensor.ns2289065804_temperature
    internal: true

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    address: 0x3C
    lambda: |-
      // Print "Mitt Smarta Hus" in top center.
      it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Mitt Smarta Hus");

      // Print time in HH:MM format
      it.strftime(0, 60, id(font2), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());

      // Print inside temperature (from homeassistant sensor)
      if (id(inside_temperature).has_state()) {
        it.printf(127, 23, id(font3), TextAlign::TOP_RIGHT , "%.1f°", id(inside_temperature).state);
      }

      // Print outside temperature (from homeassistant sensor)
      if (id(outside_temperature).has_state()) {
        it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT , "%.1f°", id(outside_temperature).state);
      }

font:
- file: "_fonts/nasalization.ttf"
  id: font1
  size: 12
- file: "_fonts/refsan.ttf"
  id: font2
  size: 42
- file: "_fonts/refsan.ttf"
  id: font3
  size: 13
- file: "_fonts/refsan.ttf"
  id: font4
  size: 10